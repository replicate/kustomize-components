# Originally from # https://github.com/replicate/cog-serving/blob/5e9017a6e94a965364cc4bc895f16c9b2c45ecd3/pkg/kubernetes/helm-charts/helm-redis-values-production.yaml
# - see further git history there

## Bitnami Redis image version
## ref: https://hub.docker.com/r/bitnami/redis/tags/
##
image:
  registry: docker.io
  repository: bitnami/redis
  tag: 7.0.11

architecture: standalone

## Specifies the Kubernetes Cluster's Domain Name.
clusterDomain: cluster.local

auth:
  enabled: true
  existingSecret: "redis"
  usePasswordFiles: false

master:
  containerPorts:
    redis: 6378
  service:
    ports:
      redis: 6378
  resources:
    # It might be nice in theory to use requests and no limits for redis, as it
    # can mostly be trusted to not use much more than two cores and its assigned
    # `maxmemory` configuration value, and we would rather redis were not
    # OOM-killed by the kernel.
    #
    # In practice, not applying limits means that the pod will be assigned a QoS
    # class of "Burstable" rather than "Guaranteed", which increases the chances
    # of it being evicted due to node pressure, particularly if it is
    # momentarily exceeding its memory or CPU requests.
    limits:
      memory: 8Gi
      cpu: "2"
  persistence:
    enabled: true
    ## @param master.persistence.medium Provide a medium for `emptyDir` volumes.
    ##
    medium: ""
    sizeLimit: ""
    size: 32Gi

tls:
  enabled: true
  authClients: false
  existingSecret: redis-tls
  certFilename: tls.crt
  certKeyFilename: tls.key
  certCAFilename: ca.crt

metrics:
  enabled: true
  extraArgs:
    skip-tls-verification: "true"

# Most of our redises are used as lookaside caches, for which RDB is usually a
# more appropriate choice than AOF.
commonConfiguration: |-
  appendonly no
  save 3600 1 300 100 60 10000

  maxmemory 7gb
  maxmemory-policy allkeys-lru
